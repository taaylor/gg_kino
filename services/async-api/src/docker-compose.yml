version: '3.8'

services:
  elasticsearch:
    image: elasticsearch:8.16.5
    container_name: elasticsearch-container
    volumes:
      - elasticsearch_data:/usr/share/elasticsearch/data
    environment:
      - "discovery.type=single-node"
      - "xpack.security.enabled=false"
    command: bin/elasticsearch
    expose:
      - ${ES_PORT}
    restart: always
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9200"]
      interval: 10s
      timeout: 5s
      retries: 5

  kibana:
    image: kibana:8.16.5
    container_name: kibana-container
    environment:
      - ELASTICSEARCH_HOSTS="http://${ES_HOST}:${ES_PORT}"
      - ELASTICSEARCH_SECURITY_ENABLED=false
    depends_on:
      elasticsearch:
        condition: service_healthy
    ports:
      - "${KIBANA_PORT}:${KIBANA_PORT}"
    restart: always

  es-init:
    container_name: es-init-container
    build:
      context: .
      dockerfile: elastic_dump/dump_loader/Dockerfile
    depends_on:
      elasticsearch:
        condition: service_healthy
    environment:
      - ES_HOST=${ES_HOST}
      - ES_PORT=${ES_PORT}
    restart: "no"

  redis:
    image: redis:7-alpine
    container_name: redis-container
    environment:
      - REDIS_PASSWORD=${REDIS_PASSWORD}
      - REDIS_USER=${REDIS_USER}
      - REDIS_USER_PASSWORD=${REDIS_USER_PASSWORD}
      - REDIS_HOST=${REDIS_HOST}
      - REDIS_PORT=${REDIS_PORT}
      - REDIS_DB=${REDIS_DB}
    volumes:
      - redis_data:/data
    deploy:
      resources:
        limits:
          cpus: '0.50'
          memory: 512M
        reservations:
          cpus: '0.25'
          memory: 256M
    command: >
      sh -c '
        mkdir -p /usr/local/etc/redis &&
        echo "bind 0.0.0.0" > /usr/local/etc/redis/redis.conf &&
        echo "requirepass $REDIS_PASSWORD" >> /usr/local/etc/redis/redis.conf &&
        echo "appendonly yes" >> /usr/local/etc/redis/redis.conf &&
        echo "appendfsync everysec" >> /usr/local/etc/redis/redis.conf &&
        echo "user default off" > /usr/local/etc/redis/users.acl &&
        echo "user $REDIS_USER on >$REDIS_USER_PASSWORD ~* +@all" >> /usr/local/etc/redis/users.acl &&
        redis-server /usr/local/etc/redis/redis.conf --aclfile /usr/local/etc/redis/users.acl
      '
    healthcheck:
      test: ["CMD", "redis-cli", "-a", "$REDIS_PASSWORD", "ping"]
      interval: 30s
      timeout: 10s
      retries: 5
    restart: always

  theatre-api:
    build:
      context: .
      dockerfile: ./Dockerfile
    depends_on:
      elasticsearch:
        condition: service_healthy
      redis:
        condition: service_healthy
    env_file:
      - ./.env
    restart: always

  nginx:
    image: nginx:latest
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./configs:/etc/nginx/conf.d:ro
    depends_on:
      - theatre-api
    ports:
      - "${NGINX_PORT}:${NGINX_PORT}"
    restart: always

volumes:
  elasticsearch_data:
  redis_data:
